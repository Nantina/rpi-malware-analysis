#!/bin/bash

# Define the base URL for the Flask app
BASE_URL="http://127.0.0.1:5000"

# Function to perform a set of requests
function make_requests() {
    # Registering a new user
    curl -X POST -H "Content-Type: application/json" -d '{"username": "user1", "password": "pass123"}' $BASE_URL/register
    echo -e "\n"

    # Registering another user
    curl -X POST -H "Content-Type: application/json" -d '{"username": "user2", "password": "password456"}' $BASE_URL/register
    echo -e "\n"

    # Attempting to log in as user1
    curl -X POST -H "Content-Type: application/json" -d '{"username": "user1", "password": "pass123"}' $BASE_URL/login
    echo -e "\n"

    # Attempting to log in with wrong credentials
    curl -X POST -H "Content-Type: application/json" -d '{"username": "user2", "password": "wrongpassword"}' $BASE_URL/login
    echo -e "\n"

    # Simple Calculator operations
    curl "$BASE_URL/calculator?operation=add&num1=15&num2=30"
    echo -e "\n"
    curl "$BASE_URL/calculator?operation=subtract&num1=50&num2=20"
    echo -e "\n"
    curl "$BASE_URL/calculator?operation=multiply&num1=7&num2=8"
    echo -e "\n"
    curl "$BASE_URL/calculator?operation=divide&num1=100&num2=4"
    echo -e "\n"

    # Adding tasks to To-Do List
    curl -X POST -H "Content-Type: application/json" -d '{"task": "Complete Flask project"}' $BASE_URL/add_task
    echo -e "\n"
    curl -X POST -H "Content-Type: application/json" -d '{"task": "Write documentation"}' $BASE_URL/add_task
    echo -e "\n"
    curl -X POST -H "Content-Type: application/json" -d '{"task": "Submit assignment"}' $BASE_URL/add_task
    echo -e "\n"

    # Viewing all tasks
    curl $BASE_URL/tasks
    echo -e "\n"
}

# Infinite loop to repeat commands indefinitely
while true
do
    # Decide randomly if the system will be busy or not
    BUSY=$((RANDOM % 2))

    if [ $BUSY -eq 1 ]; then
        # Simulate a busy period
        for i in {1..5}; do
            make_requests
            # Short delay between rapid requests
            sleep $((RANDOM % 2))
        done
    else
        # Simulate a less busy period
        make_requests
        # Longer delay to simulate less frequent requests
        sleep $((RANDOM % 10 + 5))
    fi

    # Occasionally introduce a longer pause to simulate inactivity
    if [ $((RANDOM % 10)) -eq 0 ]; then
        echo "Simulating a pause period..."
        sleep $((RANDOM % 30 + 10))
    fi
done
